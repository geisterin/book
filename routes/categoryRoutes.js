const express = require('express');
const router = express.Router();
const categoryController = require('../controllers/categoryController');
const categoryValidation = require('../middlewares/categoryValidation');
const validate = require('../middlewares/validate');
const authMiddleware = require('../middlewares/authMiddleware');
const isAdmin = require('../middlewares/isAdmin'); // üëë

// üîì –û—Ç–∫—Ä—ã—Ç—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
/**
 * @swagger
 * tags:
 *   name: Categories
 *   description: API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏

 * /categories:
 *   get:
 *     summary: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
 *     tags: [Categories]
 *     responses:
 *       200:
 *         description: –£—Å–ø–µ—à–Ω–æ
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 $ref: '#/components/schemas/Category'

 *   post:
 *     summary: –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
 *     tags: [Categories]
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/CategoryInput'
 *     responses:
 *       201:
 *         description: –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/Category'
 */

router.get('/search', categoryController.search); // üëà –î–û :id
router.get('/', categoryController.getAll);
router.get('/:id', categoryController.getById);

/* üîí –¢–æ–ª—å–∫–æ –¥–ª—è admin */
router.post('/', authMiddleware, isAdmin, categoryValidation, validate, categoryController.create);
router.put('/:id', authMiddleware, isAdmin, categoryValidation, validate, categoryController.update);
router.delete('/:id', authMiddleware, isAdmin, categoryController.delete);

module.exports = router;
